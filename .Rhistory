while (i < length(a)){
print(i)
i <- i + 3
}
ticket <- function(speed, mood){
if(speed >= 80){
print("License and registration please")
}
if(mood == "terrible" & speed >= 100){
print("You have the right to remain silent.")
}else if (mood == "bad" | speed >= 90){
print("I'm going to have to write you a ticket.")
}else{
print("Let's try to keep it under 80, ok?")
}
}
ticket(80,"bad")
ticket(70,"bad")
ticket(70,"terible")
library("chron", lib.loc="C:/Users/Manuel/Documents/R/win-library/3.0")
detach("package:chron", unload=TRUE)
library("chron")
for(i in 1:100){
print(i)
}
seq(1,100,by=3)
seq(0,100,by=3)
complete <- function(directory, id = 1:332) {
nobs = c()
for(i in seq_along(id)) {
data <- getmonitor(i, directory)
nobs <- append(nobs, sum(complete.cases(data)))
}
folder_comp <- cbind(id, nobs)
folder_comp <- as.data.frame(folder_comp)
folder_comp
}
}
# histogramm
x <- rnorm(100)
hist(x)
graphics.off()
# options
y <- x + rnorm(100)
par(las = 1)
plot(x, y) #base_las1.svg
par(las = 2)
plot(x, y) #base_las2.svg
par("lty")
par("lwd")
par("col")
par("pch")
par("bg")
par("mar")
par("oma")
par("mfrow")
par("mfcol")
y <- x + rnorm(100)
plot(x, y) #base_scatter0.svg
x1 <- rnorm(10)
y1 <- rnorm(10)
points(x1, y1, col = "red") # base_scatter0+reddots.svg
lines(x1, y1) # base_scatter0+reddots+lines.svg
text(-2, 3, "experimenting with options") # base_scatter0+reddots+lines+text.svg
x <- rnorm(100)
hist(x)
dev.off()
# normal distribution
x <- rnorm(100)
hist(x) # base_histogramm.svg
y <- rnorm(100)
plot(x, y) # base_scatter1.svg
par(mar = c(2, 2, 2, 2)) # change margin
plot(x, y) # base_mar2222.svg
par(mar = c(4, 4, 2, 2)) # change margin
plot(x, y) # base_mar4422.svg
plot(x, y, pch = 20)  # base_smalldots.svg
plot(x, y, pch = 19)  # base_bigdots.svg
plot(x, y, pch = 2)  # base_triangles.svg
plot(x, y, pch = 3)  # base_crosses1.svg
plot(x, y, pch = 4)  # base_crosses2.svg
example(points)
plot(x, y, pch = 20) # base_scatter2.svg
dev.off()
# normal distribution
x <- rnorm(100)
hist(x) # base_histogramm.svg
y <- rnorm(100)
plot(x, y) # base_scatter1.svg
par(mar = c(2, 2, 2, 2)) # change margin
plot(x, y) # base_mar2222.svg
par(mar = c(4, 4, 2, 2)) # change margin
plot(x, y) # base_mar4422.svg
plot(x, y, pch = 20)  # base_smalldots.svg
plot(x, y, pch = 19)  # base_bigdots.svg
plot(x, y, pch = 2)  # base_triangles.svg
plot(x, y, pch = 3)  # base_crosses1.svg
plot(x, y, pch = 4)  # base_crosses2.svg
example(points)
dev.off()
dev.off()
x <- rnorm(100)
hist(x) # base_histogramm.svg
y <- rnorm(100)
plot(x, y) # base_scatter1.svg
par(mar = c(2, 2, 2, 2)) # change margin
plot(x, y) # base_mar2222.svg
par(mar = c(4, 4, 2, 2)) # change margin
plot(x, y) # base_mar4422.svg
plot(x, y, pch = 20)  # base_smalldots.svg
plot(x, y, pch = 19)  # base_bigdots.svg
plot(x, y, pch = 2)  # base_triangles.svg
plot(x, y, pch = 3)  # base_crosses1.svg
plot(x, y, pch = 4)  # base_crosses2.svg
x <- rnorm(100)
y <- rnorm(100)
plot(x, y, pch = 20) # base_scatter2.svg
title("Scatterplot")
text(-2, -2, "Label")
legend("topleft", legend = "Data", pch = 20)
fit <- lm(y ~ x)
abline(fit, lwd = 3, col = "blue")
plot(x, y, xlab = "Weight", ylab = "Height", main = "Scatterplot", pch = 20) # base_scatter2+regress1.svg
legend("topright", legend = "Data", pch = 20)
fit <- lm(y ~ x)
abline(fit, lwd = 3, col = "red") # base_scatter2+regress2.svg
# poisson distribution
x <- rnorm(100)
y <- rnorm(100)
z <- rpois(100, 2)
par(mfrow = c(2, 1))
plot(x, y, pch = 20) # base_mfrow21_smalldots.svg
plot(x, z, pch = 19) # base_mfrow21.svg
par("mar")
par(mar = c(2, 2, 1, 1))
plot(x, y, pch = 20)
plot(x, z, pch = 20) # base_mfrow21_mar2211.svg
par(mfrow = c(1, 2))
plot(x, y, pch = 20)
plot(x, z, pch = 20) # base_mfrow12.svg
par(mar = c(4, 4, 2, 2))
plot(x, y, pch = 20)
plot(x, z, pch = 20) # base_mfrow12_mar4422.svg
par(mfrow = c(2, 2))
plot(x, y, pch = 20) # base_mfrow22_1.svg
plot(x, z, pch = 20) # base_mfrow22_2.svg
plot(z, x, pch = 20) # base_mfrow22_3.svg
plot(y, x, pch = 20) # base_mfrow22_4.svg
par(mfcol = c(2, 2))
plot(x, y) # base_mfcol22_1.svg
plot(x, z) # base_mfcol22_2.svg
plot(z, x) # base_mfcol22_3.svg
plot(y, x) # base_mfcol22_4.svg
par(mfrow = c(1, 1))
x <- rnorm(100)
y <- x + rnorm(100)
g <- gl(2, 50)
g <- gl(2, 50, labels = c("Male", "Female"))
str(g)
plot(x, y) # base_scatter3.svg
g
plot(x, y) # base_scatter3.svg
plot(x, y, type = "n") # base_scatter3_nodata.svg
points(x[g == "Male"], y[g == "Male"], col = "green") # base_scatter3_male.svg
points(x[g == "Female"], y[g == "Female"], col = "blue") # base_scatter3_male+female.svg
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(0.5)
pal(0.63)
pal(seq(0, 1, len = 10))
pal <- colorRampPalette(c("red", "yellow"))
pal(2)
pal(10)
pal <- colorRampPalette(c("red", "yellow", "blue"))
x <- rnorm(100)
plot(x, col = pal(100)) # colorRampPalette_100.svg
plot(x, col = pal(10)) # colorRampPalette_10.svg
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
image(volcano, col = pal(20)) # volcano.svg
x <- rnorm(10000)
y <- rnorm(10000)
smoothScatter(x, y) # smoothScatter.svg
x <- rnorm(10000)
y <- rnorm(10000)
smoothScatter(x, y) # smoothScatter.svg
plot(x, y, pch = 19) # scatter_bigdots
plot(x, y, col = rgb(0, 0, 0, 0.2), pch = 19) # scatter_transparentdots
smoothScatter(x, y) # smoothScatter.svg
plot(x, y, col = rgb(0, 0, 0, 0.2), pch = 19) # scatter_transparentdots
plot(x, y, col = rgb(0, 0, 0, 0.1), pch = 19) # scatter_transparentdots
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(0.5)
pal(0.63)
pal(seq(0, 1, len = 10))
pal <- colorRampPalette(c("red", "yellow"))
pal(2)
pal(10)
pal <- colorRampPalette(c("red", "yellow", "blue"))
x <- rnorm(100)
plot(x, col = pal(100)) # colorRampPalette_100.svg
plot(x, col = pal(100)) # colorRampPalette_100.svg
plot(x, col = pal(10)) # colorRampPalette_10.svg
plot(x, col = pal(100), pch = 19) # colorRampPalette_100.svg
plot(x, col = pal(10), pch = 19) # colorRampPalette_10.svg
plot(x, col = pal(100), pch = 19) # colorRampPalette_100.svg
#Paleta de colores
pal <- colorRampPalette(c("red", "yellow", "blue"))
x <- rnorm(100)
plot(x, col = pal(100), pch = 19) # colorRampPalette_100.svg
plot(x, col = pal(10), pch = 19) # colorRampPalette_10.svg
pal <- colorRampPalette(c("yellow", "blue", "red"))
x <- rnorm(100)
plot(x, col = pal(100), pch = 19) # colorRampPalette_100.svg
plot(x, col = pal(10), pch = 19) # colorRampPalette_10.svg
y <- rnorm(100)
plot(x,y, col = pal(100), pch = 19) # colorRampPalette_100.svg
plot(x,y, col = pal(10), pch = 19) # colorRampPalette_10.svg
plot(x,y, col = pal(100), pch = 19) # colorRampPalette_100.svg
plot(x,y, col = pal(10), pch = 19) # colorRampPalette_10.svg
plot(x,y, col = pal(100), pch = 19) # colorRampPalette_100.svg
plot(x,y, col = pal(100), pch = 19) # colorRampPalette_100.svg
plot(x,y, col = pal(100), pch = 19) # colorRampPalette_100.svg
plot(x,y, col = pal(10), pch = 19) # colorRampPalette_10.svg
plot(x,y, col = pal(3), pch = 19) # colorRampPalette_10.svg
pal <- colorRampPalette(c("yellow", "black", "red"))
x <- rnorm(100)
y <- rnorm(100)
plot(x,y, col = pal(100), pch = 19) # colorRampPalette_100.svg
plot(x,y, col = pal(3), pch = 19) # colorRampPalette_10.svg
plot(x,y, col = pal(2), pch = 19)
pal <- colorRampPalette(c("yellow", "black", "red"))
x <- rnorm(100)
y <- rnorm(100)
plot(x,y, col = pal(2), pch = 19)
plot(x,y, col = pal(100), pch = 19)
colors
pal <- colorRampPalette(c("yellow", "blue", "red"))
x <- rnorm(100)
y <- rnorm(100)
plot(x,y, col = pal(2), pch = 19)
plot(x,y, col = pal(100), pch = 19)
plot(x,y, col = pal(10), pch = 19)
plot(x,y, col = pal(1000), pch = 19)
pal(1000)
x <- rnorm(1000)
y <- rnorm(1000)
plot(x,y, col = pal(10), pch = 19)
plot(x,y, col = pal(1000), pch = 19)
y <- rpois(n=1000,6)
plot(x,y, col = pal(10), pch = 19)
plot(x,y, col = pal(1000), pch = 19)
plot(x,y, col = pal(100), pch = 19)
plot(x,y, col = pal(10), pch = 19)
plot(x,y, col = pal(100), pch = 19)
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
image(volcano, col = pal(20)) # volcano.svg
image(volcano, col = pal(2)) # volcano.svg
image(volcano, col = pal(5)) # volcano.svg
pal <- colorRampPalette(c("yellow", "blue", "red"))
x <- rnorm(200)
y <- rnorm(200)
plot(x,y, col = pal(10), pch = 19)
plot(x,y, col = pal(100), pch = 19)
pal <- colorRampPalette(c("red", "yellow", "blue"))
x <- rnorm(200)
y <- rnorm(200)
plot(x,y, col = pal(10), pch = 19)
plot(x,y, col = pal(100), pch = 19)
pal <- colorRampPalette(c("red", "yellow", "blue"))
x <- rnorm(200)
y <- rnorm(200)
plot(x,y, col = pal(10), pch = 19)
plot(x,y, col = pal(100), pch = 19)
library(RColorBrewer)
cols <- brewer.pal(3, "BuGn")
cols
pal <- colorRampPalette(cols)
image(volcano, col = pal(5)) # volcano.svg
pal <- colorRampPalette(c("red", "yellow", "blue"))
image(volcano, col = pal(5)) # volcano.svg
image(volcano, col = pal(100)) # volcano.svg
image(volcano, col = pal(1000)) # volcano.svg
image(volcano, col = pal(1000)) # volcano.svg
x <- rnorm(10000)
y <- rnorm(10000)
smoothScatter(x, y) # smoothScatter.svg
y <- rpois(10000,5)
smoothScatter(x, y) # smoothScatter.svg
#Paleta de colores
x <- rnorm(200)
y <- rnorm(200)
plot(x,y)
plot(x,y, col=c(1:4))
plot(x,y, col = pal(10), pch = 19)
plot(x,y, col=c(1:90))
plot(x,y, col=c(1:90), pch=19)
pal <- colorRampPalette(c("red", "yellow", "blue"))
plot(x,y, col = pal(3), pch = 19)
plot(x,y, col = pal(10), pch = 19)
plot(x,y, col = pal(100), pch = 19)
?volcano
?volcano
image(volcano, col = pal(3)) # volcano.svg
image(volcano, col = pal(20)) # volcano.svg
image(volcano, col = pal(50)) # volcano.svg
image(volcano, col = pal(1000)) # volcano.svg
x <- rnorm(10000)
y <- rnorm(10000)
smoothScatter(x, y) # smoothScatter.svg
#Smooth scatter
x <- rnorm(10000)
y <- rnorm(10000)
plot(x, y, pch = 19) # scatter_bigdots
smoothScatter(x, y) # smoothScatter.svg
plot(x, y, col = rgb(0, 0, 0, 0.1), pch = 19) # scatter_transparentdots
plot(x, y, col = rgb(255, 0, 0, 0.1), pch = 19) # scatter_transparentdots
plot(x, y, col = rgb(250, 0, 0, 0.1), pch = 19) # scatter_transparentdots
plot(x, y, col = rgb(1, 0, 0, 0.1), pch = 19) # scatter_transparentdots
plot(x, y, col = rgb(0, 0, 1, 0.1), pch = 19) # scatter_transparentdots
plot(x, y, col = rgb(0, 0, 1, 0.5), pch = 19) # scatter_transparentdots
1
plot(x, y, col = rgb(0, 0, 1, 0.1), pch = 19) # scatter_transparentdots
lm1 <- lm(y~x)
abline(lm1)
abline(lm1, col =2 )
abline(lm1, col =2, lwd=2 )
abline(lm1, col =2, lwd=3 )
lm1
summary(lm1)
trunc(4)
trunc(4.1)
trunc(4.9)
trunc(-4.9)
trunc(-4.95435411321)
pal <- colorRampPalette(c("red", "yellow", "blue"))
image(volcano, col = pal(50)) # volcano.svg
data(state)
statedata = data.frame(state.x77)
str(statedata)
lm1 <- lm(Life.Exp ~ ., data= statedata)
summary(lm1)
SSE <- sum((lm1$fitted.values-statedata$Life.Exp)^2)
SSE
lm2 <- lm(Life.Exp ~ Population + Murder + Frost + HS.Grad, data= statedata)
summary(lm2)
SSE <- sum((lm2$fitted.values-statedata$Life.Exp)^2)
SSE
library(rpart)
library(rpart)
CARTb = rpart(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area , data=statedata)
prp(CARTb)
library(rpart.plot)
CARTb = rpart(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area , data=statedata)
prp(CARTb)
Life.exp.pred <- predict(CARTb)
SEEtree <- sum((Life.exp.pred-statedata$Life.Exp)2)
SEEtree <- sum((Life.exp.pred-statedata$Life.Exp)^2)
SEEtree
CARTb = rpart(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area , data=statedata, minbucket =5)
prp(CARTb)
Life.exp.pred <- predict(CARTb)
SEEtree <- sum((Life.exp.pred-statedata$Life.Exp)^2)
SEEtree
CARTb = rpart(Life.Exp ~  Area , data=statedata, minbucket =1)
prp(CARTb)
Life.exp.pred <- predict(CARTb)
SEEtree <- sum((Life.exp.pred-statedata$Life.Exp)^2)
SEEtree
library(caret)
set.seed(111)
fitControl = trainControl( method = "cv", number = 10 )
cartGrid = expand.grid( .cp = (1:50)*0.01)
train(Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area, data = statedata, method = "rpart", trControl = fitControl, tuneGrid = cartGrid )
train(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area, data = statedata, method = "rpart", trControl = fitControl, tuneGrid = cartGrid )
CARTb = rpart(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area , data=statedata, control=rpart.control(cp = 0.18))
prp(CARTb)
Life.exp.pred <- predict(CARTb)
SEEtree <- sum((Life.exp.pred-statedata$Life.Exp)^2)
SEEtree
CARTb = rpart(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area , data=statedata, control=rpart.control(cp = 0.12))
prp(CARTb)
Life.exp.pred <- predict(CARTb)
SEEtree <- sum((Life.exp.pred-statedata$Life.Exp)^2)
Life.exp.pred <- predict(CARTb)
SEEtree <- sum((Life.exp.pred-statedata$Life.Exp)^2)
SEEtree
set.seed(111)
# Define cross-validation experiment
fitControl = trainControl( method = "cv", number = 10 )
cartGrid = expand.grid( .cp = (1:50)*0.01)
train(Life.Exp ~  Area, data = statedata, method = "rpart", trControl = fitControl, tuneGrid = cartGrid )
set.seed(111)
train(Life.Exp ~  Area, data = statedata, method = "rpart", trControl = fitControl, tuneGrid = cartGrid )
CARTb = rpart(Life.Exp ~  Area , data=statedata, control=rpart.control(cp = 0.02))
prp(CARTb)
SEEtree <- sum((Life.exp.pred-statedata$Life.Exp)^2)
SEEtree
Life.exp.pred <- predict(CARTb)
SEEtree <- sum((Life.exp.pred-statedata$Life.Exp)^2)
SEEtree
cube <- function(x, n) {
x^3
}
cube(3)
cube(3,3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
1\t2\t3\t4\t5\t7\t11\t12\t15\t16\t17\n26\t33\t34\t35\t36\t37\t39\t41\t43\t44\n47\t48\t49\t51\t53\t58\t59\t60\t61\t66\n68\t69\t71\t75\t76\t77\t80\t81\t83\t88\n90\t91\t94\t97\t98\t100\t101\t102\t104\t105\n107\t109\t110\t115\t116\t117\t119\t120\t123\t125\n128\t131\t135\t139\t140\t145\t146\t148\t150\t151\n152\t154\t155\t158\t160\t161\t164\t166\t170\t171\n174\t175\t177\t178\t180\t181\t183\t184\t185\t188\n189\t190\t191\t197\t198\t200\t201\t203\t205\t206\n208\t209\t210\t211\t218\t219\t220\t229\t230\t231\n232\t240\t242\t244\t245\t246\t248\t253\t254\t255\n257\t260\t261\t262\t263\t264\t265\t267\t268\t270\n271\t272\t273\t274\t275\t276\t277\t278\t279\t280\n283\t284\t286\t287\t289\t290\t291\t292\t294\t297\n298\t299\t305\t306\t308\t309\t311\t312\t314\t318\n319\t322\t323\t324\t327\t328\t329\t338\t342\t346\n347\t349\t352\t354\t355\t357\t360\t362\t365\t368\n369\t375\t376\t379\t380\t381\t385\t386\t387\t389\n392\t393\t396\t397\t398\t402\t406\t408\t409\t410\n411\t412\t416\t420\t425\t431\t432\t435\t436\t438\n440\t444\t445\t447\t449\t452\t453\t455\t456\t457\n458\t459\t461\t462\t463\t464\t465\t466\t467\t468\n478\t479\t480\t482\t483\t484\t485\t486\t487\t488\n490\t498\t499\t500\t502\t503\t507\t508\t509\t510\n515\t518\t519\t521\t526\t529\t530\t532\t535\t536\n540\t541\t544\t547\t548\t549\t550\t552\t553\t554\n556\t557\t559\t560\t562\t563\t565\t566\t567\t568\n573\t574\t576\t577\t579\t580\t581\t583\t585\t586\n589\t592\t593\t594\t595\t596\t599\t601\t602\t604\n605\t606\t607\t608\t609\t610\t611\t613\t614\t616\n617\t619\t621\t623\t628\t638\t
"1\t2\t3\t4\t5\t7\t11\t12\t15\t16\t17\n26\t33\t34\t35\t36\t37\t39\t41\t43\t44\n47\t48\t49\t51\t53\t58\t59\t60\t61\t66\n68\t69\t71\t75\t76\t77\t80\t81\t83\t88\n90\t91\t94\t97\t98\t100\t101\t102\t104\t105\n107\t109\t110\t115\t116\t117\t119\t120\t123\t125\n128\t131\t135\t139\t140\t145\t146\t148\t150\t151\n152\t154\t155\t158\t160\t161\t164\t166\t170\t171\n174\t175\t177\t178\t180\t181\t183\t184\t185\t188\n189\t190\t191\t197\t198\t200\t201\t203\t205\t206\n208\t209\t210\t211\t218\t219\t220\t229\t230\t231\n232\t240\t242\t244\t245\t246\t248\t253\t254\t255\n257\t260\t261\t262\t263\t264\t265\t267\t268\t270\n271\t272\t273\t274\t275\t276\t277\t278\t279\t280\n283\t284\t286\t287\t289\t290\t291\t292\t294\t297\n298\t299\t305\t306\t308\t309\t311\t312\t314\t318\n319\t322\t323\t324\t327\t328\t329\t338\t342\t346\n347\t349\t352\t354\t355\t357\t360\t362\t365\t368\n369\t375\t376\t379\t380\t381\t385\t386\t387\t389\n392\t393\t396\t397\t398\t402\t406\t408\t409\t410\n411\t412\t416\t420\t425\t431\t432\t435\t436\t438\n440\t444\t445\t447\t449\t452\t453\t455\t456\t457\n458\t459\t461\t462\t463\t464\t465\t466\t467\t468\n478\t479\t480\t482\t483\t484\t485\t486\t487\t488\n490\t498\t499\t500\t502\t503\t507\t508\t509\t510\n515\t518\t519\t521\t526\t529\t530\t532\t535\t536\n540\t541\t544\t547\t548\t549\t550\t552\t553\t554\n556\t557\t559\t560\t562\t563\t565\t566\t567\t568\n573\t574\t576\t577\t579\t580\t581\t583\t585\t586\n589\t592\t593\t594\t595\t596\t599\t601\t602\t604\n605\t606\t607\t608\t609\t610\t611\t613\t614\t616\n617\t619\t621\t623\t628\t638\t
"
cat("1\t2\t3\t4\t5\t7\t11\t12\t15\t16\t17\n26\t33\t34\t35\t36\t37\t39\t41\t43\t44\n47\t48\t49\t51\t53\t58\t59\t60\t61\t66\n68\t69\t71\t75\t76\t77\t80\t81\t83\t88\n90\t91\t94\t97\t98\t100\t101\t102\t104\t105\n107\t109\t110\t115\t116\t117\t119\t120\t123\t125\n128\t131\t135\t139\t140\t145\t146\t148\t150\t151\n152\t154\t155\t158\t160\t161\t164\t166\t170\t171\n174\t175\t177\t178\t180\t181\t183\t184\t185\t188\n189\t190\t191\t197\t198\t200\t201\t203\t205\t206\n208\t209\t210\t211\t218\t219\t220\t229\t230\t231\n232\t240\t242\t244\t245\t246\t248\t253\t254\t255\n257\t260\t261\t262\t263\t264\t265\t267\t268\t270\n271\t272\t273\t274\t275\t276\t277\t278\t279\t280\n283\t284\t286\t287\t289\t290\t291\t292\t294\t297\n298\t299\t305\t306\t308\t309\t311\t312\t314\t318\n319\t322\t323\t324\t327\t328\t329\t338\t342\t346\n347\t349\t352\t354\t355\t357\t360\t362\t365\t368\n369\t375\t376\t379\t380\t381\t385\t386\t387\t389\n392\t393\t396\t397\t398\t402\t406\t408\t409\t410\n411\t412\t416\t420\t425\t431\t432\t435\t436\t438\n440\t444\t445\t447\t449\t452\t453\t455\t456\t457\n458\t459\t461\t462\t463\t464\t465\t466\t467\t468\n478\t479\t480\t482\t483\t484\t485\t486\t487\t488\n490\t498\t499\t500\t502\t503\t507\t508\t509\t510\n515\t518\t519\t521\t526\t529\t530\t532\t535\t536\n540\t541\t544\t547\t548\t549\t550\t552\t553\t554\n556\t557\t559\t560\t562\t563\t565\t566\t567\t568\n573\t574\t576\t577\t579\t580\t581\t583\t585\t586\n589\t592\t593\t594\t595\t596\t599\t601\t602\t604\n605\t606\t607\t608\t609\t610\t611\t613\t614\t616\n617\t619\t621\t623\t628\t638\t
")
cat("1\t2\t3\t4\t5\t7\t11\t12\t15\t16\n17\t26\t33\t34\t35\t36\t37\t39\t41\t43\n44\t47\t48\t49\t51\t53\t58\t59\t60\t61\n66\t68\t69\t71\t75\t76\t77\t80\t81\t83\n88\t90\t91\t94\t97\t98\t100\t101\t102\t104\n105\t107\t109\t110\t115\t116\t117\t119\t120\t123\n125\t128\t131\t135\t139\t140\t145\t146\t148\t150\n151\t152\t154\t155\t158\t160\t161\t164\t166\t170\n171\t174\t175\t177\t178\t180\t181\t183\t184\t185\n188\t189\t190\t191\t197\t198\t200\t201\t203\t205\n206\t208\t209\t210\t211\t218\t219\t220\t229\t230\n231\t232\t240\t242\t244\t245\t246\t248\t253\t254\n255\t257\t260\t261\t262\t263\t264\t265\t267\t268\n270\t271\t272\t273\t274\t275\t276\t277\t278\t279\n280\t283\t284\t286\t287\t289\t290\t291\t292\t294\n297\t298\t299\t305\t306\t308\t309\t311\t312\t314\n318\t319\t322\t323\t324\t327\t328\t329\t338\t342\n346\t347\t349\t352\t354\t355\t357\t360\t362\t365\n368\t369\t375\t376\t379\t380\t381\t385\t386\t387\n389\t392\t393\t396\t397\t398\t402\t406\t408\t409\n410\t411\t412\t416\t420\t425\t431\t432\t435\t436\n438\t440\t444\t445\t447\t449\t452\t453\t455\t456\n457\t458\t459\t461\t462\t463\t464\t465\t466\t467\n468\t478\t479\t480\t482\t483\t484\t485\t486\t487\n488\t490\t498\t499\t500\t502\t503\t507\t508\t509\n510\t515\t518\t519\t521\t526\t529\t530\t532\t535\n536\t540\t541\t544\t547\t548\t549\t550\t552\t553\n554\t556\t557\t559\t560\t562\t563\t565\t566\t567\n568\t573\t574\t576\t577\t579\t580\t581\t583\t585\n586\t589\t592\t593\t594\t595\t596\t599\t601\t602\n604\t605\t606\t607\t608\t609\t610\t611\t613\t614\n616\t617\t619\t621\t623\t628\t638\t
")
install.packages("KernSmooth")
packageDescription('KernSmooth')
image
volcano
image(volcano)
sdv1<- sdv(scale(volcano))
install.packages("sdv")
svd1<- svd(scale(volcano))
svd1<- svd(scale(volcano))
dim(volcano)
dim(svd1$d)
svd1$d
dim(svd1$u)
dim(volcano)
dim(svd1$v)
image(svd1$v)
image(svd1$v)
image(svd1$u)
image(volcano)
par(mfrow=c(1,3))
image(svd1$u)
image(volcano)
image(volcano)
image(volcano)
image(svd1$u)
image(svd1$v)
volcano5 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(sdv1$v[,1:5])
volcano5 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
image(volcano5)
image(volcano)
image(volcano5)
image(volcano)
image(volcano5)
volcano5 <- svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10])
volcano5 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
volcano10 <- svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10])
image(volcano10)
volcano5 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
volcano10 <- svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10])
image(volcano)
image(volcano5)
image(volcano10)
dim(volcano)
volcano60 <- svd1$u[,1:60] %*% diag(svd1$d[1:60]) %*% t(svd1$v[,1:60])
image(volcano)
image(volcano5)
image(volcano60)
image(volcano)
image(volcano5)
image(volcano60)
par(mfrow=c(1,3))
image(volcano)
image(volcano5)
image(volcano60)
volcano60 <- svd1$u[,1:61] %*% diag(svd1$d[1:61]) %*% t(svd1$v[,1:61])
image(volcano)
image(volcano5)
image(volcano60)
volcano5 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
volcano10 <- svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10])
volcano60 <- svd1$u[,1:61] %*% diag(svd1$d[1:61]) %*% t(svd1$v[,1:61])
image(volcano)
image(volcano5)
image(volcano10)
colors()
library(knitr)
getwd()
setwd("C:\\Users\\Manuel\\Dropbox\\3. DSS\\RepData_PeerAssessment1")
knit(input = "PA1_template.Rmd", output = "PA1_template.md")
library(markdown)
markdownToHTML("PA1_template.md","PA1_template.html" )
